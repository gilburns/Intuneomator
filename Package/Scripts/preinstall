#!/bin/zsh

#  preinstall
#  Intuneomator
#
#  Created by Gil Burns on 5/20/25.
#

# Base path for LaunchDaemons
DAEMON_DIR="/Library/LaunchDaemons"

# Service settings backup
SERVICE_SETTINGS_PATH="/Library/Application Support/Intuneomator/IntuneomatorService.plist"
SERVICE_STATUS_PATH="/Library/Application Support/Intuneomator/IntuneomatorStatus.json"
TRIGGER_PATH="/Library/Application Support/Intuneomator"
BACKUP_DIR="/tmp/Intuneomator_Install_Backup"
BACKUP_SETTINGS_PATH="$BACKUP_DIR/IntuneomatorService.plist"

# List of daemon watch path filenames
triggers=(
  ".automation.trigger"
  ".cachecleaner.trigger"
  ".labelupdater.trigger"
  ".updatecheck.trigger"
)

# Clean out existing watch path items before upgrade so things are not triggered
for trigger in $triggers; do
  triggerFullPath="$TRIGGER_PATH/$trigger"

  if [[ -f "$triggerFullPath" ]]; then
    echo "Removing trigger file $trigger"
    rm "$triggerFullPath" 2>/dev/null
  else
    echo "$trigger does not exist, skipping"
  fi
done

# === Cleanup old status json ===
rm "$SERVICE_STATUS_PATH"

# List of daemon plist filenames
daemons=(
  "com.gilburns.intuneomator.automation.plist"
  "com.gilburns.intuneomator.cachecleaner.plist"
  "com.gilburns.intuneomator.labelupdater.plist"
  "com.gilburns.intuneomator.ondemand.plist"
  "com.gilburns.intuneomator.service.plist"
  "com.gilburns.intuneomator.updatecheck.plist"
)

# === Backup Service Settings ===
echo "Backing up service settings..."

# Create backup directory
mkdir -p "$BACKUP_DIR"

# Backup service settings if they exist
if [[ -f "$SERVICE_SETTINGS_PATH" ]]; then
  echo "Backing up service settings from: $SERVICE_SETTINGS_PATH"
  cp "$SERVICE_SETTINGS_PATH" "$BACKUP_SETTINGS_PATH"
  echo "Service settings backed up to: $BACKUP_SETTINGS_PATH"
else
  echo "No existing service settings found at: $SERVICE_SETTINGS_PATH"
  # Create empty marker file to indicate no settings existed
  touch "$BACKUP_DIR/no_settings_existed"
fi

# === Unload Launch Daemons ===
echo "Unloading launch daemons..."

for daemon in $daemons; do
  plistPath="$DAEMON_DIR/$daemon"
  label="${daemon%.plist}"

  if [[ -f "$plistPath" ]]; then
    echo "Booting out $label"
    launchctl bootout system "$plistPath" 2>/dev/null || echo "$label not loaded or already stopped"
  else
    echo "$plistPath does not exist, skipping"
  fi
done

echo "Preinstall daemon unload complete."
